# This is a basic workflow to help you get started with Actions

name: update-git-pages

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the "main" branch
  push:
    branches: [ "main" ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # node install
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: 18
          
      - name: install redoc-cli
        run: npm install -g redoc-cli
      
      - name: make docs folder
        run: mkdir docs

      - name: bundle
        run: redoc-cli bundle ./openapi/openapi.yaml -o ./docs/index.html

      - name: Deploy
        uses: peaceiris/actions-gh-pages@v3
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: ./docs
      
      - name: install swagger-cli
        run: npm install -g @apidevtools/swagger-cli

      - name: make ouput folder
        run: mkdir output

      - name: bundle
        run: swagger-cli bundle -o output/openapi.json openapi/openapi.yaml

      - name: Generate token
        id: generate_token
        uses: tibdex/github-app-token@v2
        with:
          app_id: ${{ secrets.APP_ID }}
          private_key: ${{ secrets.APP_PRIVATE_KEY }}

      - name: setup commit message
        env: 
          RUN_URL: "${{ github.event.repository.html_url }}/actions/runs/${{ github.run_id }}"
          HEAD_COMMIT: "${{ github.event.repository.html_url }}/commit/${{ github.event.after || github.sha }}"
        id: commit_message
        run: |
          echo "content= update openapi.json created from ${{ env.RUN_URL }} latest commit: ${{ env.HEAD_COMMIT }}" >> $GITHUB_OUTPUT
      - name: check commit message
        run: echo "${{ steps.commit_message.outputs.content }}"
      - name: copy openpai_json
        uses: dmnemec/copy_file_to_another_repo_action@main
        env:
          API_TOKEN_GITHUB: ${{ steps.generate_token.outputs.token }}
        with:
          source_file: output/openapi.json
          destination_repo: jjunary0425/papago-openapi-gen
          destination_branch: main
          destination_folder: 'output'
          commit_message: '${{ steps.commit_message.outputs.content }}'
          user_email: 'jjunary0425@gmail.com'
          user_name: 'rimapa'